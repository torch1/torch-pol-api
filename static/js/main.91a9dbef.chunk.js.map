{"version":3,"sources":["logo.svg","YoutubeComponent.js","FacebookComponent.js","TwitterComponent.js","TorchItemComponent.js","YoutubeFeed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","YoutubeComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showVideo","toggleVideo","bind","assertThisInitialized","setState","post","item","embed","react_default","a","createElement","width","YouTube","videoId","youtube_id","src","image_url","style","padding","margin","backgroundColor","color","display","onClick","name","attachment_title","username","plays_count","created","Component","FacebookComponent","TwitterComponent","profile_image","dangerouslySetInnerHTML","__html","text","href","post_id","target","TorchItemComponent","type","post_type","src_YoutubeComponent","src_TwitterComponent","src_FacebookComponent","YoutubeFeed","items","isLoaded","url","changeChannelPolitician","changeChannelIndia","changeChannelCarnegie","get","_this2","fetch","then","res","json","_this3","_this4","_this5","_this$state","header","class","map","src_TorchItemComponent","App","className","logo","alt","src_YoutubeFeed","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91a9dbef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8c4d3470.svg\";","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nclass YoutubeComponent extends Component {\n  state = { showVideo:false}\n\n  constructor(props) {\n    super(props);\n        this.toggleVideo = this.toggleVideo.bind(this);\n\n  }\n\n  toggleVideo(){\n    //this.state.showVideo = !this.state.showVideo;\n    this.setState((state,props) => {\n      return {showVideo:!state.showVideo}\n    });\n    //this.state.showVideo = !this.state.showVideo;\n  }\n\n  render() {\n\n\n\n    var postStyle = {\n      padding: 10,\n      margin:10,\n      backgroundColor:\"#eff0f1\",\n      color:\"#333\",\n      display:\"inline-block\",\n      width:'400px'\n      \n    }\n    var post = this.props.item.post;\n    var embed = <div></div>\n    if(this.state.showVideo){\n      embed = <div width=\"100%\"><YouTube videoId={post.youtube_id} /></div>\n    }else{\n      embed = <div>\n\t\t\t\t\t\t\t\t\t<div><img width=\"400px\" src={post.image_url} /></div>\n\t\t\t\t\t\t\t</div>\n    }\n    return ( \n      <div style={postStyle}>\n        <div onClick={this.toggleVideo}>{embed}</div>\n        <h3>{post.name}</h3>\n        <h4>{post.attachment_title}</h4>\n        <div>\n        <span>@{post.username}</span> | \n        <span>{post.plays_count} views </span> | <span>{post.created}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default YoutubeComponent\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nclass FacebookComponent extends Component {\n  constructor(props) {\n    super(props);\n\n  }\n\n\n  render() {\n\n\n\n    var postStyle = {\n      padding: 10,\n      margin:10,\n      backgroundColor:\"#eff0f1\",\n      color:\"#333\",\n      display:\"inline-block\",\n      width:'400px'\n      \n    }\n    var post = this.props.item.post;\n    var embed = <div></div>\n    embed = <div>\n                <div><img width=\"400px\" src={post.image_url} /></div>\n            </div>\n    return ( \n      <div style={postStyle}>\n        <div >{embed}</div>\n        <h3>{post.name}</h3>\n        <h4>{post.attachment_title}</h4>\n        <div>\n        <span>@{post.username}</span> | \n        <span>{post.plays_count} views </span> | <span>{post.created}</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FacebookComponent\n","import React, { Component } from 'react';\nclass TwitterComponent extends Component {\n  state = { showVideo:false}\n\n  render() {\n\n    var postStyle = {\n      padding: 10,\n      margin:10,\n      backgroundColor:\"#eff0f1\",\n      color:\"#333\",\n      display:\"inline-block\",\n      width:'400px'\n      \n    }\n    var post = this.props.item.post;\n    var embed = <div><img width=\"400px\" src={post.image_url} /></div>\n    return ( \n      <div style={postStyle}>\n        <img src={post.profile_image} />\n        <h3>{post.name}</h3>\n        <h4>{post.attachment_title}</h4>\n        <div>\n        <p dangerouslySetInnerHTML={{__html: post.text}}></p>\n        <span>@{post.username}</span> | \n        <span>{post.plays_count} views </span> | <span><a href={\"https://twitter.com/\"+post.username+\"/status/\"+post.post_id} target=\"_blank\">{post.created}</a></span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TwitterComponent\n","import React, { Component } from 'react';\nimport YoutubeComponent from './YoutubeComponent.js'\nimport FacebookComponent from './FacebookComponent.js'\nimport TwitterComponent from './TwitterComponent.js'\n\nclass TorchItemComponent extends Component {\n  render() {\n    var type = this.props.item.post_type;\n    if(type == 'youtube'){\n          return ( <YoutubeComponent item={this.props.item} /> )\n    }\n    if(type == 'tweet'){\n          return ( <TwitterComponent item={this.props.item} /> )\n    }\n    if(type == 'facebook'){\n          return ( <FacebookComponent item={this.props.item} /> )\n    }\n    return <div></div>\n  }\n}\n\nexport default TorchItemComponent\n\n","import React, { Component } from 'react';\nimport TorchItemComponent from './TorchItemComponent.js'\n\n\nclass YoutubeFeed extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      items: [],\n      isLoaded: false,\n      url : \"https://cors-anywhere.herokuapp.com/https://www.torch1.com/posts/pol-api2/1118\"\n\n    }\n\n      this.changeChannelPolitician = this.changeChannelPolitician.bind(this);\n      this.changeChannelIndia = this.changeChannelIndia.bind(this);\n      this.changeChannelCarnegie = this.changeChannelCarnegie.bind(this);\n      this.get = this.get.bind(this);\n  }\n  get(){\n    if(!this.state.url){return}\n    fetch(this.state.url)\n      .then(res => res.json())\n      .then(json=>{\n        this.setState({\n          isLoaded:true,\n          items:json\n        })\n      })\n  }\n  componentDidMount(){\n    this.get()\n  }\n  changeChannelIndia(){\n    this.setState(\n        { url :\"https://cors-anywhere.herokuapp.com/https://www.torch1.com/fc-api/915\", \n            isLoaded:false},\n        () => this.get()\n    )\n  }\n  changeChannelPolitician(){\n\n    this.setState(\n        { url :\"https://cors-anywhere.herokuapp.com/https://www.torch1.com/posts/pol-api2/1118\" ,\n            isLoaded:false},\n        () => this.get()\n    )\n  }\n  changeChannelCarnegie(){\n    this.setState(\n        { url : \"https://cors-anywhere.herokuapp.com/https://www.torch1.com/posts/carnegie-api/1091\",\n            isLoaded:false},\n        () => this.get()\n    )\n  }\n\n\n  render() {\n    var { isLoaded, items } = this.state;\n    var containerStyle = {\n      width:'850px'\n    }\n    let header = <div class='shiny-btn-ctn'>\n      <button class=\"shiny-btn\" onClick={this.changeChannelPolitician}>All U.S. Politicians</button>\n      <button class=\"shiny-btn\" onClick={this.changeChannelIndia}>India Philanthropy Scan</button>\n      <button class=\"shiny-btn\" onClick={this.changeChannelCarnegie}>Carnegie</button>\n    </div>\n    if(!isLoaded){\n      return (\n        <div>\n        {header}\n        <div> Loading...  </div>\n        </div>\n      );\n    }else{\n    return ( \n    <div>\n      <div style={containerStyle}>\n        {header}\n        {items.map(item =>(\n            <div>\n          <TorchItemComponent item={item} />\n          </div>\n        ))}\n      </div>\n      </div>\n    )\n  }}\n}\n\n\nexport default YoutubeFeed\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport './shiny-button.css';\n\nimport YoutubeFeed from './YoutubeFeed.js'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} alt=\"logo\" />\n        </header>\n        <content>\n          <YoutubeFeed />\n        </content>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}